{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNewTask","e","setState","newTask","target","value","addNewTask","tasks","concat","toConsumableArray","state","title","done","removeTask","index","splice","handleKeyUp","key","showActiveTask","showTab","showFinishedTask","showAllTask","markAsDone","objectSpread","markAsUndone","showingIntro","showIntro","store","get","prevProps","prevState","set","_this2","react_default","a","createElement","className","onClick","Fragment","onKeyUp","type","name","autoComplete","required","onChange","htmlFor","map","task","filter","class","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5cef8422.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport store from \"store\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newTask: \"\",\n      tasks: store.get(\"tasks\") || [],\n      showTab: \"all\",\n      showIntro: true\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    store.set(\"tasks\", prevState.tasks);\n  }\n\n  handleNewTask = e => {\n    this.setState({\n      newTask: e.target.value\n    });\n  };\n\n  addNewTask = () => {\n    const tasks = [\n      ...this.state.tasks,\n      {\n        title: this.state.newTask,\n        done: false\n      }\n    ];\n    this.setState({\n      tasks,\n      newTask: \"\"\n    });\n  };\n\n  removeTask = (e, index) => {\n    const tasks = [...this.state.tasks];\n    tasks.splice(index, 1);\n    this.setState({\n      tasks: tasks\n    });\n  };\n\n  handleKeyUp = e => {\n    if (e.key === \"Enter\") {\n      this.addNewTask();\n    }\n  };\n\n  showActiveTask = () => {\n    this.setState({\n      showTab: \"active\"\n    });\n  };\n\n  showFinishedTask = () => {\n    this.setState({\n      showTab: \"finished\"\n    });\n  };\n  showAllTask = () => {\n    this.setState({\n      showTab: \"all\"\n    });\n  };\n  markAsDone = (e, index) => {\n    const tasks = [...this.state.tasks];\n    tasks[index] = { ...tasks[index] };\n    tasks[index].done = true;\n    this.setState({\n      tasks: tasks\n    });\n  };\n\n  markAsUndone = (e, index) => {\n    const tasks = [...this.state.tasks];\n    tasks[index] = { ...tasks[index] };\n    tasks[index].done = false;\n    this.setState({\n      tasks: tasks\n    });\n  };\n  showingIntro = e => {\n    this.setState({\n      showIntro: false\n    });\n  };\n\n  render() {\n\n    if (this.state.showIntro) {\n      return (\n        <div className=\"introBox\">\n          <button className=\"showIntroButton\" onClick={this.showingIntro}>\n            Open me\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"borderBackground\">\n          <div className=\"transBox\">\n            <h1>to do list</h1>\n            <br />\n            <div className=\"AddTask\">\n              <div className=\"form\">\n                <input\n                  onKeyUp={this.handleKeyUp}\n                  type=\"text\"\n                  name=\"writeHere\"\n                  autoComplete=\"off\"\n                  required\n                  value={this.state.newTask}\n                  onChange={this.handleNewTask}\n                />\n                <label htmlFor=\"writeHere\" className=\"labelName\">\n                  <span className=\"contentName\">\n                    Write sth here what u want to do\n                  </span>\n                </label>\n                <button onClick={this.addNewTask}></button>\n              </div>\n            </div>\n            <br />\n            <div className=\"showButtons\">\n              <button onClick={this.showActiveTask}>Show active</button>\n              <button onClick={this.showFinishedTask}>Show completed</button>\n              <button onClick={this.showAllTask}>Show all</button>\n            </div>\n\n            {this.state.showTab === \"all\" ? (\n              <div className=\"Tasks\">\n                {this.state.tasks.map((task, index) => {\n                  return (\n                    <div className=\"borderTasks\">\n                      <span>\n                        <i className=\"material-icons\">  </i> {task.title}\n                      </span>\n                      <button onClick={e => this.markAsDone(e, index)}>\n                        <i className=\"material-icons\">done_outline</i>\n                      </button>\n                      <button onClick={e => this.removeTask(e, index)}>\n                        <i className=\"material-icons\">cancel</i>\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n            ) : null}\n\n            {this.state.showTab === \"finished\" ? (\n              <div className=\"Tasks-finished\">\n                {this.state.tasks\n                  .filter(task => task.done)\n                  .map((task, index) => {\n                    return (\n                      <div className=\"borderTasks\">\n                        <span>\n                          <i className=\"material-icons\">  </i> {task.title}\n                        </span>\n                        <button onClick={e => this.markAsUndone(e, index)}>\n                          <i class=\"material-icons\">refreshed</i>\n                        </button>\n                        <button onClick={e => this.removeTask(e, index)}>\n                          <i class=\"material-icons\">cancel</i>\n                        </button>\n                      </div>\n                    );\n                  })}\n              </div>\n            ) : null}\n\n            {this.state.showTab === \"active\" ? (\n              <div className=\"Tasks-active\">\n                {this.state.tasks\n                  .filter(task => !task.done)\n                  .map((task, index) => {\n                    return (\n                      <div className=\"borderTasks\">\n                        <span>\n                          <i className=\"material-icons\">  </i> {task.title}\n                        </span>\n                        <button onClick={e => this.markAsDone(e, index)}>\n                          <i class=\"material-icons\">done_outline</i>\n                        </button>\n                      </div>\n                    );\n                  })}\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}